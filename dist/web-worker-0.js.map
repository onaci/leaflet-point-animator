{"version":3,"file":"keyframeWorker.js","sources":["src/js/keyframeWorker.js"],"sourcesContent":["\n/**\n * Tranform an array of point into an \n * object of keyframes grouped by uniq times\n */\n\nlet running = 0;\nlet keyframeArray = [];\n\nonmessage = function(e) {\n\n  const job = e.data.job;\n  const timeKey = e.data.timeKey;\n  const features = e.data.features;\n  const numWorkers = e.data.numWorkers;\n\n  if(job === 'MAIN') {\n\n    // split features into chunks for worker\n    const featureChunks = chunkArray(features, numWorkers);\n\n    for(let i = 0; i < numWorkers; i += 1) {\n      running += 1;\n      const worker = new Worker('web-worker-0.js');\n      worker.onmessage = workerDone;\n      worker.postMessage({ job: 'TRANSFORM', features: featureChunks[i], timeKey });\n    }\n\n  } else if(job === 'TRANSFORM') {\n    transformFeatures(features, timeKey);\n  } else {\n    console.warn('KeyframeWorker called with invalid job', e.data);\n  }\n\n}\n\nfunction transformFeatures(features, timeKey) {\n\n  // get sorted list of dates\n  const dates = features.map(f => new Date(f.properties[timeKey])).sort((a,b) => a - b );\n\t\t\n  // uniq list of ISO strings\n  times = [...new Set(dates.map(d => d.toISOString()))]; \n\n  const keyframes = {};\n  times.forEach(time => {\n    const slicedFeatures = features.filter(f => f.properties[timeKey] === time);\n    keyframes[time] = slicedFeatures;\n  });\n  \n  postMessage({ keyframes });\n}\n\nfunction mergeKeyframes(keyframeArray) {\n  const keyframes = {};\n  keyframeArray.forEach(k => {\n    const times = Object.keys(k);\n    times.forEach(time => {\n      if(!keyframes[time]) {\n        keyframes[time] = k[time];\n      } else {\n        keyframes[time] = keyframes[time].concat(k[time]);\n      }\n    })\n  });\n  return keyframes;\n}\n\nfunction workerDone(e) {\n  running -= 1;\n  keyframeArray.push(e.data.keyframes);\n  if(running < 1) {\n    const keyframes = mergeKeyframes(keyframeArray);\n    postMessage({ keyframes });\n  }\n}\n\nfunction chunkArray(array, parts) {\n  let result = [];\n  for (let i = parts; i > 0; i--) {\n      result.push(array.splice(0, Math.ceil(array.length / i)));\n  }\n  return result;\n}\n\n"],"names":["running","keyframeArray","onmessage","e","job","data","timeKey","features","numWorkers","featureChunks","chunkArray","i","worker","Worker","workerDone","postMessage","transformFeatures","console","warn","dates","map","f","Date","properties","sort","a","b","times","Set","d","toISOString","keyframes","forEach","time","slicedFeatures","filter","mergeKeyframes","k","Object","keys","concat","push","array","parts","result","splice","Math","ceil","length"],"mappings":"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"}